30 Jan 2016 version 2.2

The only change is to make the StdListener constructor public in the .NET code, to address GitHub Issue #7. The constructor is already public in the Java code.

------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------

12 Dec 2015 version 2.1

Breaking change from version 2.0
--------------------------------
You must add the new CouchDB "filters" design document as described in the CouchDB directory Readme.txt file, otherwise message polling will not work.
The filter prevents clients receiving changes relating to deleted documents, reducing network traffic and client processing load.

------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------

29 Jul 2013 version 2.0

Breaking changes from version 1.0
---------------------------------
Changed namespace from Bollywell.Hydra... to Shastra.Hydra...
Changed HydraService and Listener types to StdHydraService and StdListener respectively, in line with the Java equivalents.
Changed the Observables in PubSubByType.Subscriber and Conversations.Conversation to be Notification<TMessage> rather than TMessage. This allows them to propagate errors to clients without breaking the semantics of Reactive Extension Observables (which should terminate on error). See below for notes on upgrading.

Other changes
-------------
Created a Java client. See the Java subdirectory for code, the README for instructions on downloading the Maven package, and the documentation for use.
Added overloads to allow setting the topic in PubSubByType messages.
Minor code tweaks.

Upgrading from version 1.0
--------------------------
* Get the latest code or NuGet packages.
* Do global search and replaces to update the namespace and HydraService and Listener class names. (If you have been declaring variables as IHydraService and IListener, this should be a small job. If not, consider doing so now.)
* If you want to keep the original behaviour of Subscriber and Conversation, which was to ignore errors on message deserialisation then use the SkipErrors extension method in Shastra.Hydra.Messaging.Extensions. For example code like

    sub.Subscribe(...)

where sub is a Subscriber becomes

    sub.SkipErrors().Subscribe(...)

SkipErrors converts the Observable<Notification<TMessage>> to an Observable<TMessage> by throwing away errors and dematerialising the stream.

------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------

26 Jan 2013 version 1.0

No changes from version 0.6.

19 Oct 2012 Version 0.6

------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------


Breaking changes from Version 0.5
---------------------------------
The API has been overhauled in preparation for the first official release. The breaking changes are:
Bollywell.Messaging.Config renamed to Bollywell.Messaging.Storage.
XXXConfigProvider classes renamed to XXXProvider. (I toyed with XXXCloud, but that will date quickly.)
Poller renamed to Listener and IHydraService.GetPoller to IHydraService.GetListener.
The various bufferDelayMs and pollIntervalMs method parameters are now properties on a new ListenerOptions class, which can optionally be provided to the HydraService constructor, to apply to all Listeners on that service, or to the GetListener method, to apply to just that Listener.
The HydraService.Send method now retries all available servers and only raises an error if none are available.
The RoundRobin provider has been removed as it does not know if servers are online, so it does not work with the new Send semantics.


Other changes
-------------
Updated Erlang UUID code to match the official CouchDb source.
Improved MessageId management to allow any suffix, rather than just two-byte hex strings.
Added PreferenceOrderProvider.
Created IStore interface and Provider constructors, and replaced timers with Schedulers, to help with testing. Created some tests.
Upgraded to Rx 2.0.
Made Provider initialisation asynchronous, so application startup is quick.

------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------

30 Jul 2012 Version 0.4

The first beta release of Hydra. Full source code is in hydra0.4.source.zip. Binaries and CouchDb setup information only are in hydra0.4.dist.zip. These correspond to the Git repository tag v0.4.

The main change is the addition of NearestServerConfigProvider, which gives failover and failback functionality. There have also been some improvements to the Scavenger Service, and several components are more configurable.

------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------

13 Jun 2012 Version 0.3

The third release of Hydra. Full source code is in hydra0.3.source.zip. Binaries and CouchDb setup information only are in hydra0.3.dist.zip. These correspond to the Mercurial repository tag v0.3.

The main change is the addition of the Stress Tester example application. This has been used to run Hydra at over 2,000,000 messages per day for extended periods to determine server load and see if CouchDb is up to the job. Useful for testing your own setup and as an example of the use of multiple message types to communicate between apps.

------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------

9 May 2012 Version 0.2

The second public release of Hydra. Full source code is in hydra0.2.source.zip. Binaries and CouchDb setup information only are in hydra0.2.dist.zip. These correspond to the Mercurial repository tag v0.2.

The primary change from v0.1 is to remove the static Services class and replace it with the new HydraService class, which is instanced, allowing one app to talk to multiple Hydra clouds. This lets you split up the messaging world into multiple subsystems, with their own collections of replicating databases.

As Services has gone, there are breaking changes from v0.1 in this distribution - the documentation has been updated to match the new code, so please see the examples for use of HydraService. While messages can be sent and received between v0.1 and v0.2 applications, v0.1 code will not compile with v0.2 binaries and vice versa.

------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------

28 Apr 2012 Version 0.1

The first public release of Hydra. Full source code is in hydra0.1.source.zip. Binaries and CouchDb setup information only are in hydra0.1.dist.zip. These correspond to the Mercurial repository tag v0.1.